<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBuscar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QCqRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAB0AAAALAAAAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAAdgAxAC4AMAAgACgA
        dQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA4ADAAKQAsACAAcQB1AGEAbABpAHQAeQAgAD0A
        IAA5ADAACgAAAAAA/9sAQwADAgIDAgIDAwMDBAMDBAUIBQUEBAUKBwcGCAwKDAwLCgsLDQ4SEA0OEQ4L
        CxAWEBETFBUVFQwPFxgWFBgSFBUU/9sAQwEDBAQFBAUJBQUJFA0LDRQUFBQUFBQUFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU/8AAEQgAgACAAwEiAAIRAQMRAf/EAB8AAAEFAQEB
        AQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQci
        cRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVm
        Z2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV
        1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//E
        ALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDTh
        JfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKT
        lJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5
        +v/aAAwDAQACEQMRAD8A/VOiiigAooooAKKranqdnounXWoahdQ2NhaRNPcXVzII4oY1BZndjgKoAJJP
        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
        FFABRRRQAUUUUAFFFFAH/9k=
</value>
  </data>
</root>